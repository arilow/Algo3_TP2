@startuml algoThief
together {
    class Juego {
    - DatoDeCiudades
    - DatosDeLadrones

    - IniciarMenu()
    - GenerarPartida()

    }

    class Partida {
        + Empezar(estado: ComunicadorEstadoPartida)
        + RegistrarJugador(nombre: string)
        + CrearNivel()
        + ComenzarNivel()
        + NivelActual(): Nivel
    }

    class ManipuladorDeEventos {
    }
}

together {
    class Nivel {
        - ciudades: Ciudad
        - ciudadActual: Ciudad
        + jugar(comunicador: ComunicadoEstadoPartida)
        + visitarCiudad(ciudad: Ciudad)
        + obetenerCiudadActual(): Ciudad
        + entrarAEdificio(edificio: int)
        + ladronArrestado(): bool
        + tieneTesoro(tesoro: string): bool
        + buscarLadrones(datosLadron: DatosLadron)
        + obtenerListaSospechosos(): Ladron[]
        + omitirOrdenDeArresto(nombreLadron: string)
        + obtenerLadron(): Ladron
        + listaEdificios(): String[]
        + obtenerFecha(): String
        + arribarACiudadActual()
        + obtenerEdificioActual(): Edificio
        + obtenerJugadorActual(): Jugador
        + nombreTesoro(): String
        + obtenerCiudad(ciudad: string): Ciudad
    }

    class CreadorDeNiveles {
        - max: int
        - min: int
        + crearNivel()
        + cargarCiudadesNivel()
        + cargarArchivo()
        + cargarLadron()
        + cargarObjetoRobado()
    }
}

together {
    class Jugador {
        - cantidadArrestos: int
        - fueAcuchillado: bool
        - nombre: string
        + asignarCargo(cargo: Cargo)
        + recibirHeridaCuchillo(tiempo: Tiempo)
        + dormir(tiempo: Tiempo)
        + recibirHeridaArmaFuego(tiempo: Tiempo)
        + viajar(distancia: double, tiempo: Tiempo)
        + agregarArresto()
        + setCantidadArrestos(cantidadArrestos: int)
        + getCantidadArrestos(): int
        + getCargo(): Cargo
        + obtenerCargo(): string
    }

    class Ciudad {
        + Recibir(jugador: Jugador)
        + MostrarPista(): Pista
    }

    class OrdenDeArresto{
    - nombreLadronDeOrden: String
    }
}

class Ladron {
    - ciudadActual: string
    - edificioActual: int
    - nombreLadron: string
    - esLibre: bool
    + obtenerNombre(): string
    + toString(): string
    + constatarDatos(datos: DatosLadron): bool
    + estaEn(ciudad: string, edificio: int): bool
    + arrestar()
    + estaLibre(): bool
}

class Interpol {
    - ladronBuscado: String
    - listaLadrones: List<Ladron>
    + buscarLadrones()
}

class Mapa {
    - mapeo_aux: Map<String,Ciudad>
    + viajar(Jugador jugador,Ciudad ciudadPartida, String ciudadLLlegada, Tiempo tiempo)
    + obtenerCiudad(String ciudad)
    + obtenerCiudad(String ciudad)
    + cargarArchivo()
}



class Tiempo {
    - horas: int
    - horasFin: int
    - dia: int
    - diaFin: int
}

class Edificio {
    - nombre: string
    - contadorDeEntradas: int
    + aumentarTiempo(tiempo: Tiempo)
    + mostrarPista(): Pista
    + mostrarInfo(): string
    + nombre(): string
}

interface Cargo{
    + agregarArresto()
    + viajar(distancia: double, tiempo: Tiempo)
    + asignarJugador(jugador: Jugador)
    + obtenerCargo(): string
}

class Novato{}
class Detective{}
class Investigador{}
class Sargento{}

class Pista{}

class Aeropuerto{}
class Puerto{}
class Bolsa{}
class Banco{}
class Biblioteca{}

class Ladron{}
class DatosLadron{
    - sexo: string
    - hobby: string
    - cabello: string
    - senia: string
    - vehiculo: string
    + constatar(otro: DatosLadron): bool
    + toString(): string
}

interface ObjetoRobado{
    + es(nombre: string)
    + obtenerCantidadCiudadesEscape(): int
}
class Comun{
    - nombre: string
    - cantidadCiudadesEscape: int
}
class Valioso{
    - nombre: string
    - cantidadCiudadesEscape: int
}
class MuyValioso{
    - nombre: string
    - cantidadCiudadesEscape: int
}

class Tiempo {
    - horas
    - horasFin
    sumarHoras()
}

interface Sitio {
}

class Ubicacion {
    - longitud: double
    - latitud: double
    + obtenerLatitud(): double
    + obtenerLongitud(): double
    + calcularDistancia(ubicacion: Ubicacion): double
}

Juego -right-> Partida
Partida -right-> ManipuladorDeEventos
Partida --> Nivel
ManipuladorDeEventos .up.> Nivel

Jugador --> Cargo

Cargo <|.. Novato
Cargo <|.. Detective
Cargo <|.. Investigador
Cargo <|.. Sargento

Ciudad .down.> Tiempo
Ciudad --> "4" Sitio
Ciudad .down.> Ubicacion
Sitio --> AireLibre
Sitio -->  Edificio
Edificio <|-- Aeropuerto
Edificio <|-- Puerto
Edificio <|-- Biblioteca
Edificio <|-- Bolsa
Edificio <|-- Banco
Ciudad ..> Pista
Edificio *-- "1" Pista
Ladron --> DatosLadron

ObjetoRobado <|.. Comun
ObjetoRobado <|.. Valioso
ObjetoRobado <|.. MuyValioso


'Partida --> ManipuladorDeEventos
Partida --> Jugador
Partida --> CreadorDeNiveles

Nivel ..> Ciudad
Nivel ..> Ladron
Nivel ..> Interpol
Nivel ..> OrdenDeArresto
Nivel ..> Mapa
Nivel ..> Tiempo
Nivel ..> ObjetoRobado

CreadorDeNiveles .left> Nivel
Jugador <.up. Nivel

Jugador <. Ciudad


@enduml